import telebot
from telebot import types
from telebot.types import Message, WebAppInfo
import webbrowser
import sqlite3
import asyncio
import sqlite3
import database

telebot.TeleBot("7057179821:AAEjvdjmucsJgMuVAJFo8t5FD5837yK67HY")

botname = "SkySquad"

admin_ids = ['6866142004, ']  # –°–ø–∏—Å–æ–∫ chat_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞

chat_reviews = -1002086738096  # ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤

orders = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
price = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–Ω
help_request = {}  #–°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–º–æ—â–∏
owners = {'5111998837'}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
price_gold = 1.5  # –¶–µ–Ω–∞ –≥–æ–ª–¥—ã (1 —à—Ç—É–∫–∞)
golds = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ–ª–¥—ã



@bot.message_handler(commands=['start', 'menu'])
def start(message):
  markup = types.InlineKeyboardMarkup()
  b1 = types.InlineKeyboardButton('–ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')
  markup.row(b1)
  b2 = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', callback_data='info')
  b3 = types.InlineKeyboardButton('–ü–æ–º–æ—â—å', callback_data='help')
  markup.row(b2, b3)
  b4 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='profil')
  markup.row(b4)
  b5 = types.InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='support')
  b6 = types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã', callback_data='review')
  markup.row(b5, b6)
  bot.send_message(
      message.chat.id,
      'SkySquad-–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö/–∏–≥—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!üíª',
      reply_markup=markup)

#–ó–∞–∫–∞–∑—ã
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(callback):
  if callback.data == 'python':
    chat_id = callback.message.chat.id
    bot.send_message(
        chat_id,
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Python | bot. –≠—Ç–∞ –∫–∞—Ç–µ–≥–æ–∏—è –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–æ–≤ –Ω–∞ Python –¥–ª—è telegram –∏–ª–∏ discord.'
    )
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∑–∞–∫–∞–∑:")
    bot.register_next_step_handler(callback.message, process_order)
  elif callback.data == 'mounting':
    chat_id = callback.message.chat.id
    bot.send_message(
        chat_id,
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ú–æ–Ω—Ç–∞–∂. –≠—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –º–æ–Ω—Ç–∞–∂ —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ.'
    )
    bot.register_next_step_handler(callback.message, process_order)
  elif callback.data == 'catalog':
    chat_id = callback.message.chat.id
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('–ò–≥—Ä—ã', callback_data='games')
    markup.row(b1)
    b2 = types.InlineKeyboardButton('Python | bot', callback_data='python')
    b3 = types.InlineKeyboardButton('–ú–æ–Ω—Ç–∞–∂', callback_data='mounting')
    markup.row(b2, b3)
    bot.send_message(chat_id,
                     "–í—ã–±–µ–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —É—Å–ª—É–≥–∏!üìú",
                     reply_markup=markup)
  elif callback.data == 'done_order':
    chat_id = callback.message.chat.id
    username = callback.from_user.username
    bot.send_message(chat_id, "–û—Ç—á—ë—Ç –æ –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥–ª–∞–≤. –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
    for admin_id in owners:
      bot.send_message(
          admin_id,
          f"–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω!\n–û–ø–µ—Ä–∞—Ç–æ—Ä: @{username}\n–ó–∞–ø—Ä–æ—Å: {orders[chat_id]}\n–¶–µ–Ω–∞: {price[chat_id]}\n "
      )
  elif callback.data == 'done_help':
    chat_id = callback.message.chat.id
    username = callback.from_user.username
    bot.send_message(chat_id, "–û—Ç—á—ë—Ç –æ –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥–ª–∞–≤. –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
    for admin_id in owners:
      bot.send_message(
          admin_id,
          f"–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω!\n–û–ø–µ—Ä–∞—Ç–æ—Ä: @{username}\n–ó–∞–ø—Ä–æ—Å: {orders[chat_id]}\n "
      )
  elif callback.data == 'info':
    chat_id = callback.message.chat.id
    bot.send_message(
        chat_id,
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å:\nSquadLand-–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!\n \nWeb-—Å–∞–π—Ç: squadland.fo.team\nTelegram-–∫–∞–Ω–∞–ª: https://t.me/squadlandruss"
    )
  elif callback.data == 'help':
    chat_id = callback.message.chat.id
    bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å.")
    bot.register_next_step_handler(callback.message, process_help)
  elif callback.data == 'games':
    chat_id = callback.message.chat.id
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('Minecraft', callback_data='minecraft')
    b2 = types.InlineKeyboardButton('Standoff 2', callback_data='standoff')
    markup.row(b1, b2)
    bot.send_message(chat_id,
                     "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–≥—Ä–æ–≤–æ–π —É—Å–ª—É–≥–∏.üéÆ",
                     reply_markup=markup)
  elif callback.data == 'standoff':
    chat_id = callback.message.chat.id
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å –≥–æ–ª–¥—Éüí∞', callback_data='buy_gold')
    b2 = types.InlineKeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä',
                                    callback_data='calculator_gold')
    markup.row(b1, b2)
    bot.send_message(chat_id,
                     "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–≤–ª—è–µ–º –≥–æ–ª–¥—É –≤ –∏–≥—Ä–µ Standoff 2!üí∞",
                     reply_markup=markup)
  elif callback.data == 'buy_gold':
    chat_id = callback.message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–¥—ã.üí∞")
    bot.register_next_step_handler(callback.message, process_gold)
  elif callback.data == 'calculator_gold':
    chat_id = callback.message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–¥—ã.üí∞")
    bot.register_next_step_handler(callback.message, process_calculator_gold)
  elif callback.data == 'done_gold':
    chat_id = callback.message.chat.id
    username = callback.from_user.username
    bot.send_message(chat_id, "–û—Ç—á—ë—Ç –æ –∑–∞–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≥–ª–∞–≤. –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!")
    for admin_id in owners:
      bot.send_message(
          admin_id,
          f"–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω!\n–û–ø–µ—Ä–∞—Ç–æ—Ä: @{username}\n–ì–æ–ª–¥—ã: {golds[chat_id]}\n–¶–µ–Ω–∞: {golds[chat_id] * price_gold} ‚ÇΩ\n "
      )
  elif callback.data == 'minecraft':
    chat_id = callback.message.chat.id
    bot.send_message(chat_id, "–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç—É —Ç–æ–≤–∞—Ä–æ–≤. :(")
  elif callback.data == 'review':
    chat_id = callback.message.chat.id
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('–û—Ç–∑—ã–≤—ã',
                                    url='https://t.me/+iVqDsaTC20wwODFi')
    b2 = types.InlineKeyboardButton('–Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤',
                                    callback_data='review_write')
    markup.row(b1, b2)
    bot.send_message(chat_id,
                     "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –æ—Ç–∑—ã–≤—ã –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞!",
                     reply_markup=markup)
  elif callback.data == 'review_write':
    chat_id = callback.message.chat.id
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤.")
    bot.register_next_step_handler(callback.message, send_reviews)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞
def process_order(message):
  chat_id = message.chat.id
  order = message.text
  orders[chat_id] = order
  bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∑–∞–∫–∞–∑–∞:")
  bot.register_next_step_handler(message, process_price)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω—ã –∑–∞–∫–∞–∑–∞
def process_price(message):
  chat_id = message.chat.id
  markup = types.InlineKeyboardMarkup()
  b1 = types.InlineKeyboardButton(
      '–û–ø–ª–∞—Ç–∞',
      web_app=WebAppInfo(
          url='https://www.tinkoff.ru/rm/okishev.maksim15/JbPyG41200'))
  markup.row(b1)
  try:
    price[chat_id] = float(message.text)
    send_order_to_admins(chat_id)
    bot.send_message(chat_id,
                     "–í–∞—à –∑–∞–∫–∞–∑ –∏ —Ü–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.",
                     reply_markup=markup)
  except ValueError:
    bot.send_message(
        chat_id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —Ü–µ–Ω—ã.",
        reply_markup=markup)
    bot.register_next_step_handler(message, process_price)


# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
def send_order_to_admins(chat_id):
  markup = types.InlineKeyboardMarkup()
  b1 = types.InlineKeyboardButton('–ì–æ—Ç–æ–≤–æ', callback_data='done_order')
  markup.row(b1)
  username = bot.get_chat(chat_id).username
  order_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n–ó–∞–∫–∞–∑:{orders[chat_id]}\n–¶–µ–Ω–∞: {price.get(chat_id, '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')} ‚ÇΩ\n "
  bot.send_message(
      chat_id,
      "–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–ü–æ–∂–∞–¥—É–π—Å—å–∞ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
  for admin_id in admin_ids:
    bot.send_message(admin_id, order_message, reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–º–æ—â—å
def process_help(message):
  chat_id = message.chat.id
  markup = types.InlineKeyboardMarkup()
  b1 = types.InlineKeyboardButton('–ì–æ—Ç–æ–≤–æ', callback_data='done_help')
  markup.row(b1)
  help_request = message.text
  username = bot.get_chat(chat_id).username
  help_message = f"–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–º–æ—â—å!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n–ó–∞–ø—Ä–æ—Å: {help_request}"
  bot.send_message(
      chat_id,
      "–í–∞—à –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.\n–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤.")
  for admin_id in admin_ids:
    bot.send_message(admin_id, help_message, reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ –≥–æ–ª–¥—É –≤ Standoff 2
def process_gold(message):
  chat_id = message.chat.id
  gold = int(message.text)
  golds[chat_id] = gold
  username = bot.get_chat(chat_id).username
  markup = types.InlineKeyboardMarkup()
  b1 = types.InlineKeyboardButton('–ì–æ—Ç–æ–≤–æ', callback_data='done_gold')
  markup.row(b1)
  markup2 = types.InlineKeyboardMarkup()
  b2 = types.InlineKeyboardButton(
      '–û–ø–ª–∞—Ç–∞',
      web_app=WebAppInfo(
          url='https://www.tinkoff.ru/rm/okishev.maksim15/JbPyG41200'))
  markup2.row(b2)
  gold_user = f"–í–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –≥–æ–ª–¥—É!\n–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–¥—ã: {gold}\n–¶–µ–Ω–∞: {gold * price_gold} ‚ÇΩ\n "
  gold_message = f"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –≥–æ–ª–¥—É!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n–ö–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–¥—ã: {gold}\n–¶–µ–Ω–∞: {gold * price_gold} ‚ÇΩ\n "
  bot.send_message(
      chat_id,
      "–í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n–ü–æ–∂–∞–¥—É–π—Å—å–∞ –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
  bot.send_message(chat_id, gold_user, reply_markup=markup2)
  for admin_id in admin_ids:
    bot.send_message(admin_id, gold_message, reply_markup=markup)


# –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≥–æ–ª–¥—ã –≤ Standoff 2


def process_calculator_gold(message):
  chat_id = message.chat.id
  try:
    gold = int(message.text)
    bot.send_message(chat_id,
                     f"–¶–µ–Ω–∞ –∑–∞ {gold} –≥–æ–ª–¥—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {gold*price_gold} ‚ÇΩ")
  except ValueError:
    bot.send_message(
        chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–¥—ã.")
    bot.register_next_step_handler(message, process_calculator_gold)


@bot.message_handler(content_types=['text'])
def handle_text(message):
  if message.from_user.id in admin_ids:
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for user_id in admin_ids:
      if user_id != message.from_user.id:
        bot.send_message(
            user_id,
            f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.first_name} ({message.from_user.id}): {message.text}"
        )
  else:
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for admin_id in admin_ids:
      bot.send_message(
          admin_id,
          f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} (@{message.from_user.username}): {message.text}"
      )


def send_reviews(message):
  review = message.text
  bot.send_message(chat_reviews, review)
  bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")


def profil(message):
  bot.send_message(
      callback.message.chat.id,
      f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n \n–ò–º—è: {callback.from_user.username}\nID: {callback.from_user.id}\n \n–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n \n–°—Å—ã–ª–∫–∞: https://t.me/{botname}?start={callback.from_user.id}\n–†–µ—Ñ–µ—Ä—ã–ª–æ–≤: "
  )


bot.polling()
